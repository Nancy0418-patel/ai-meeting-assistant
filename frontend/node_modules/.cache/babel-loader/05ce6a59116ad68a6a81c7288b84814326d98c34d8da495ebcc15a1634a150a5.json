{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nancy\\\\OneDrive\\\\Desktop\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\Nancy\\\\5IT\\\\sgp\\\\ftry\\\\frontend\\\\src\\\\components\\\\RecordingStudio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Grid, Card, CardContent, Typography, Button, Box, Alert, LinearProgress, Chip, Select, MenuItem, FormControl, InputLabel, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { VideoCall, Stop, PlayArrow, Pause, Refresh, CloudUpload, CheckCircle, Timer } from '@mui/icons-material';\nimport Webcam from 'react-webcam';\nimport RecordRTC from 'recordrtc';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RECORDING_CONSTRAINTS = {\n  video: {\n    width: {\n      ideal: 1280\n    },\n    height: {\n      ideal: 720\n    },\n    frameRate: {\n      ideal: 30\n    }\n  },\n  audio: {\n    sampleRate: 44100,\n    channelCount: 2,\n    volume: 1.0\n  }\n};\nfunction RecordingStudio() {\n  _s();\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordedBlob, setRecordedBlob] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [showPreview, setShowPreview] = useState(false);\n  const [cameraReady, setCameraReady] = useState(false);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    fetchQuestions();\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get('/api/questions');\n      setQuestions(response.data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n      toast.error('Failed to load questions');\n    }\n  };\n  const startRecording = async () => {\n    try {\n      if (!selectedQuestion) {\n        toast.warning('Please select a question first');\n        return;\n      }\n      const stream = webcamRef.current.stream;\n      if (!stream) {\n        toast.error('Camera not ready');\n        return;\n      }\n\n      // Initialize RecordRTC\n      mediaRecorderRef.current = new RecordRTC(stream, {\n        type: 'video',\n        mimeType: 'video/webm',\n        videoBitsPerSecond: 2000000,\n        // 2Mbps\n        audioBitsPerSecond: 128000,\n        // 128kbps\n        canvas: {\n          width: 1280,\n          height: 720\n        }\n      });\n      mediaRecorderRef.current.startRecording();\n      setIsRecording(true);\n      setRecordingTime(0);\n\n      // Start timer\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      toast.success('Recording started');\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      toast.error('Failed to start recording');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stopRecording(() => {\n        const blob = mediaRecorderRef.current.getBlob();\n        setRecordedBlob(blob);\n        setPreviewUrl(URL.createObjectURL(blob));\n        setShowPreview(true);\n      });\n      setIsRecording(false);\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      toast.success('Recording stopped');\n    }\n  };\n  const uploadRecording = async () => {\n    if (!recordedBlob || !selectedQuestion) {\n      toast.error('No recording or question selected');\n      return;\n    }\n    setIsUploading(true);\n    setUploadProgress(0);\n    try {\n      const formData = new FormData();\n      formData.append('video', recordedBlob, `recording_${Date.now()}.webm`);\n      formData.append('question_id', selectedQuestion);\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(progress);\n        }\n      });\n      toast.success('Recording uploaded successfully!');\n      resetRecording();\n    } catch (error) {\n      console.error('Upload error:', error);\n      toast.error('Failed to upload recording');\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const resetRecording = () => {\n    setRecordedBlob(null);\n    setPreviewUrl(null);\n    setRecordingTime(0);\n    setShowPreview(false);\n    if (previewUrl) {\n      URL.revokeObjectURL(previewUrl);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const selectedQuestionData = questions.find(q => q.id.toString() === selectedQuestion);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              fontWeight: 600,\n              children: \"Recording Studio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: \"Select a question and record your response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedQuestion,\n                onChange: e => setSelectedQuestion(e.target.value),\n                label: \"Select Question\",\n                children: questions.map(question => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: question.id.toString(),\n                  children: question.text\n                }, question.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), selectedQuestionData && /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: selectedQuestionData.category,\n                color: \"primary\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), selectedQuestionData.is_default && /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"Default\",\n                color: \"secondary\",\n                size: \"small\",\n                sx: {\n                  ml: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Camera View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"video-container\",\n              sx: {\n                position: 'relative',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Webcam, {\n                ref: webcamRef,\n                audio: true,\n                videoConstraints: RECORDING_CONSTRAINTS.video,\n                audioConstraints: RECORDING_CONSTRAINTS.audio,\n                onUserMedia: () => setCameraReady(true),\n                onUserMediaError: error => {\n                  console.error('Camera error:', error);\n                  toast.error('Failed to access camera');\n                },\n                style: {\n                  width: '100%',\n                  height: 'auto',\n                  borderRadius: '12px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), isRecording && /*#__PURE__*/_jsxDEV(Box, {\n                className: \"recording-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(Timer, {\n                  sx: {\n                    fontSize: 16\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this), \"REC \", formatTime(recordingTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              gap: 2,\n              justifyContent: \"center\",\n              flexWrap: \"wrap\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"error\",\n                size: \"large\",\n                startIcon: isRecording ? /*#__PURE__*/_jsxDEV(Stop, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 44\n                }, this) : /*#__PURE__*/_jsxDEV(VideoCall, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 55\n                }, this),\n                onClick: isRecording ? stopRecording : startRecording,\n                disabled: !cameraReady || !selectedQuestion,\n                sx: {\n                  minWidth: 140\n                },\n                children: isRecording ? 'Stop Recording' : 'Start Recording'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 30\n                }, this),\n                onClick: resetRecording,\n                disabled: isRecording || !recordedBlob,\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"success\",\n                startIcon: /*#__PURE__*/_jsxDEV(CloudUpload, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 30\n                }, this),\n                onClick: uploadRecording,\n                disabled: !recordedBlob || isUploading,\n                sx: {\n                  minWidth: 120\n                },\n                children: isUploading ? 'Uploading...' : 'Upload'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), isUploading && /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                gutterBottom: true,\n                children: [\"Upload Progress: \", uploadProgress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: uploadProgress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Recording Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: cameraReady ? 'success' : 'warning',\n                icon: cameraReady ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 57\n                }, this),\n                children: [\"Camera: \", cameraReady ? 'Ready' : 'Initializing...']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: selectedQuestion ? 'success' : 'info',\n                icon: selectedQuestion ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 44\n                }, this) : /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 62\n                }, this),\n                children: [\"Question: \", selectedQuestion ? 'Selected' : 'Please select a question']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), isRecording && /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                icon: /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 49\n                }, this),\n                children: [\"Recording: \", formatTime(recordingTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), recordedBlob && /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"success\",\n                icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 51\n                }, this),\n                children: [\"Recording captured (\", Math.round(recordedBlob.size / 1024 / 1024 * 100) / 100, \" MB)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Tips:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), \"\\u2022 Ensure good lighting\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), \"\\u2022 Speak clearly and at normal pace\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), \"\\u2022 Keep recordings under 5 minutes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), \"\\u2022 Test your audio levels\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showPreview,\n      onClose: () => setShowPreview(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Recording Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [previewUrl && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"video-container\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            src: previewUrl,\n            controls: true,\n            style: {\n              width: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 2\n          },\n          children: [\"Question: \", selectedQuestionData === null || selectedQuestionData === void 0 ? void 0 : selectedQuestionData.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowPreview(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetRecording,\n          color: \"warning\",\n          children: \"Re-record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: uploadRecording,\n          variant: \"contained\",\n          disabled: isUploading,\n          children: \"Upload Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(RecordingStudio, \"r7d+v8lKSFh6yP845Zr0iUqlias=\");\n_c = RecordingStudio;\nexport default RecordingStudio;\nvar _c;\n$RefreshReg$(_c, \"RecordingStudio\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Grid","Card","CardContent","Typography","Button","Box","Alert","LinearProgress","Chip","Select","MenuItem","FormControl","InputLabel","Dialog","DialogTitle","DialogContent","DialogActions","VideoCall","Stop","PlayArrow","Pause","Refresh","CloudUpload","CheckCircle","Timer","Webcam","RecordRTC","axios","toast","jsxDEV","_jsxDEV","RECORDING_CONSTRAINTS","video","width","ideal","height","frameRate","audio","sampleRate","channelCount","volume","RecordingStudio","_s","webcamRef","mediaRecorderRef","isRecording","setIsRecording","recordedBlob","setRecordedBlob","previewUrl","setPreviewUrl","recordingTime","setRecordingTime","questions","setQuestions","selectedQuestion","setSelectedQuestion","isUploading","setIsUploading","uploadProgress","setUploadProgress","showPreview","setShowPreview","cameraReady","setCameraReady","timerRef","fetchQuestions","current","clearInterval","response","get","data","error","console","startRecording","warning","stream","type","mimeType","videoBitsPerSecond","audioBitsPerSecond","canvas","setInterval","prev","success","stopRecording","blob","getBlob","URL","createObjectURL","uploadRecording","formData","FormData","append","Date","now","post","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","resetRecording","revokeObjectURL","formatTime","seconds","mins","floor","secs","toString","padStart","selectedQuestionData","find","q","id","className","children","container","spacing","item","xs","variant","gutterBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","fullWidth","sx","mt","value","onChange","e","target","label","map","question","text","category","size","is_default","ml","lg","position","mb","ref","videoConstraints","audioConstraints","onUserMedia","onUserMediaError","style","borderRadius","fontSize","display","gap","justifyContent","flexWrap","startIcon","onClick","disabled","minWidth","severity","icon","open","onClose","maxWidth","src","controls","_c","$RefreshReg$"],"sources":["C:/Users/nancy/OneDrive/Desktop/ドキュメント/Nancy/5IT/sgp/ftry/frontend/src/components/RecordingStudio.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Alert,\r\n  LinearProgress,\r\n  Chip,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport {\r\n  VideoCall,\r\n  Stop,\r\n  PlayArrow,\r\n  Pause,\r\n  Refresh,\r\n  CloudUpload,\r\n  CheckCircle,\r\n  Timer,\r\n} from '@mui/icons-material';\r\nimport Webcam from 'react-webcam';\r\nimport RecordRTC from 'recordrtc';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst RECORDING_CONSTRAINTS = {\r\n  video: {\r\n    width: { ideal: 1280 },\r\n    height: { ideal: 720 },\r\n    frameRate: { ideal: 30 }\r\n  },\r\n  audio: {\r\n    sampleRate: 44100,\r\n    channelCount: 2,\r\n    volume: 1.0\r\n  }\r\n};\r\n\r\nfunction RecordingStudio() {\r\n  const webcamRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordedBlob, setRecordedBlob] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n  const [recordingTime, setRecordingTime] = useState(0);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedQuestion, setSelectedQuestion] = useState('');\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [cameraReady, setCameraReady] = useState(false);\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const response = await axios.get('/api/questions');\r\n      setQuestions(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching questions:', error);\r\n      toast.error('Failed to load questions');\r\n    }\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      if (!selectedQuestion) {\r\n        toast.warning('Please select a question first');\r\n        return;\r\n      }\r\n\r\n      const stream = webcamRef.current.stream;\r\n      if (!stream) {\r\n        toast.error('Camera not ready');\r\n        return;\r\n      }\r\n\r\n      // Initialize RecordRTC\r\n      mediaRecorderRef.current = new RecordRTC(stream, {\r\n        type: 'video',\r\n        mimeType: 'video/webm',\r\n        videoBitsPerSecond: 2000000, // 2Mbps\r\n        audioBitsPerSecond: 128000,  // 128kbps\r\n        canvas: {\r\n          width: 1280,\r\n          height: 720\r\n        }\r\n      });\r\n\r\n      mediaRecorderRef.current.startRecording();\r\n      setIsRecording(true);\r\n      setRecordingTime(0);\r\n\r\n      // Start timer\r\n      timerRef.current = setInterval(() => {\r\n        setRecordingTime(prev => prev + 1);\r\n      }, 1000);\r\n\r\n      toast.success('Recording started');\r\n    } catch (error) {\r\n      console.error('Error starting recording:', error);\r\n      toast.error('Failed to start recording');\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stopRecording(() => {\r\n        const blob = mediaRecorderRef.current.getBlob();\r\n        setRecordedBlob(blob);\r\n        setPreviewUrl(URL.createObjectURL(blob));\r\n        setShowPreview(true);\r\n      });\r\n\r\n      setIsRecording(false);\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n        timerRef.current = null;\r\n      }\r\n\r\n      toast.success('Recording stopped');\r\n    }\r\n  };\r\n\r\n  const uploadRecording = async () => {\r\n    if (!recordedBlob || !selectedQuestion) {\r\n      toast.error('No recording or question selected');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('video', recordedBlob, `recording_${Date.now()}.webm`);\r\n      formData.append('question_id', selectedQuestion);\r\n\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const progress = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          setUploadProgress(progress);\r\n        },\r\n      });\r\n\r\n      toast.success('Recording uploaded successfully!');\r\n      resetRecording();\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      toast.error('Failed to upload recording');\r\n    } finally {\r\n      setIsUploading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const resetRecording = () => {\r\n    setRecordedBlob(null);\r\n    setPreviewUrl(null);\r\n    setRecordingTime(0);\r\n    setShowPreview(false);\r\n    if (previewUrl) {\r\n      URL.revokeObjectURL(previewUrl);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const selectedQuestionData = questions.find(q => q.id.toString() === selectedQuestion);\r\n\r\n  return (\r\n    <Box className=\"fade-in\">\r\n      <Grid container spacing={3}>\r\n        {/* Question Selection */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" gutterBottom fontWeight={600}>\r\n                Recording Studio\r\n              </Typography>\r\n              <Typography color=\"text.secondary\" gutterBottom>\r\n                Select a question and record your response\r\n              </Typography>\r\n              \r\n              <FormControl fullWidth sx={{ mt: 2 }}>\r\n                <InputLabel>Select Question</InputLabel>\r\n                <Select\r\n                  value={selectedQuestion}\r\n                  onChange={(e) => setSelectedQuestion(e.target.value)}\r\n                  label=\"Select Question\"\r\n                >\r\n                  {questions.map((question) => (\r\n                    <MenuItem key={question.id} value={question.id.toString()}>\r\n                      {question.text}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              {selectedQuestionData && (\r\n                <Box mt={2}>\r\n                  <Chip \r\n                    label={selectedQuestionData.category} \r\n                    color=\"primary\" \r\n                    size=\"small\"\r\n                  />\r\n                  {selectedQuestionData.is_default && (\r\n                    <Chip \r\n                      label=\"Default\" \r\n                      color=\"secondary\" \r\n                      size=\"small\" \r\n                      sx={{ ml: 1 }}\r\n                    />\r\n                  )}\r\n                </Box>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Camera View */}\r\n        <Grid item xs={12} lg={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Camera View\r\n              </Typography>\r\n              \r\n              <Box className=\"video-container\" sx={{ position: 'relative', mb: 2 }}>\r\n                <Webcam\r\n                  ref={webcamRef}\r\n                  audio={true}\r\n                  videoConstraints={RECORDING_CONSTRAINTS.video}\r\n                  audioConstraints={RECORDING_CONSTRAINTS.audio}\r\n                  onUserMedia={() => setCameraReady(true)}\r\n                  onUserMediaError={(error) => {\r\n                    console.error('Camera error:', error);\r\n                    toast.error('Failed to access camera');\r\n                  }}\r\n                  style={{\r\n                    width: '100%',\r\n                    height: 'auto',\r\n                    borderRadius: '12px',\r\n                  }}\r\n                />\r\n                \r\n                {isRecording && (\r\n                  <Box className=\"recording-indicator\">\r\n                    <Timer sx={{ fontSize: 16 }} />\r\n                    REC {formatTime(recordingTime)}\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n\r\n              <Box display=\"flex\" gap={2} justifyContent=\"center\" flexWrap=\"wrap\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  size=\"large\"\r\n                  startIcon={isRecording ? <Stop /> : <VideoCall />}\r\n                  onClick={isRecording ? stopRecording : startRecording}\r\n                  disabled={!cameraReady || !selectedQuestion}\r\n                  sx={{ minWidth: 140 }}\r\n                >\r\n                  {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  startIcon={<Refresh />}\r\n                  onClick={resetRecording}\r\n                  disabled={isRecording || !recordedBlob}\r\n                >\r\n                  Reset\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  startIcon={<CloudUpload />}\r\n                  onClick={uploadRecording}\r\n                  disabled={!recordedBlob || isUploading}\r\n                  sx={{ minWidth: 120 }}\r\n                >\r\n                  {isUploading ? 'Uploading...' : 'Upload'}\r\n                </Button>\r\n              </Box>\r\n\r\n              {isUploading && (\r\n                <Box mt={2}>\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    Upload Progress: {uploadProgress}%\r\n                  </Typography>\r\n                  <LinearProgress variant=\"determinate\" value={uploadProgress} />\r\n                </Box>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Recording Status */}\r\n        <Grid item xs={12} lg={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Recording Status\r\n              </Typography>\r\n              \r\n              <Box mb={2}>\r\n                <Alert \r\n                  severity={cameraReady ? 'success' : 'warning'} \r\n                  icon={cameraReady ? <CheckCircle /> : <Timer />}\r\n                >\r\n                  Camera: {cameraReady ? 'Ready' : 'Initializing...'}\r\n                </Alert>\r\n              </Box>\r\n\r\n              <Box mb={2}>\r\n                <Alert \r\n                  severity={selectedQuestion ? 'success' : 'info'} \r\n                  icon={selectedQuestion ? <CheckCircle /> : <Timer />}\r\n                >\r\n                  Question: {selectedQuestion ? 'Selected' : 'Please select a question'}\r\n                </Alert>\r\n              </Box>\r\n\r\n              {isRecording && (\r\n                <Box mb={2}>\r\n                  <Alert severity=\"error\" icon={<Timer />}>\r\n                    Recording: {formatTime(recordingTime)}\r\n                  </Alert>\r\n                </Box>\r\n              )}\r\n\r\n              {recordedBlob && (\r\n                <Box mb={2}>\r\n                  <Alert severity=\"success\" icon={<CheckCircle />}>\r\n                    Recording captured ({Math.round(recordedBlob.size / 1024 / 1024 * 100) / 100} MB)\r\n                  </Alert>\r\n                </Box>\r\n              )}\r\n\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Tips:\r\n                <br />• Ensure good lighting\r\n                <br />• Speak clearly and at normal pace\r\n                <br />• Keep recordings under 5 minutes\r\n                <br />• Test your audio levels\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Preview Dialog */}\r\n      <Dialog \r\n        open={showPreview} \r\n        onClose={() => setShowPreview(false)}\r\n        maxWidth=\"md\" \r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          Recording Preview\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {previewUrl && (\r\n            <Box className=\"video-container\">\r\n              <video \r\n                src={previewUrl} \r\n                controls \r\n                style={{ width: '100%', height: 'auto' }}\r\n              />\r\n            </Box>\r\n          )}\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            Question: {selectedQuestionData?.text}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowPreview(false)}>\r\n            Close\r\n          </Button>\r\n          <Button onClick={resetRecording} color=\"warning\">\r\n            Re-record\r\n          </Button>\r\n          <Button onClick={uploadRecording} variant=\"contained\" disabled={isUploading}>\r\n            Upload Recording\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RecordingStudio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}